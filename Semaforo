
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity Divisor is
    Port(clk,rst: in std_logic);
end Divisor;

architecture Behavioral of Divisor is
signal rojo :std_logic := '0';
signal verde :std_logic :='1';
signal amarillo: std_logic :='0';
signal divisor: integer range 0 to 4:=0;
signal clk_aux : std_logic :='0';
signal rojo_tiempo: integer :=3;
signal verde_tiempo: integer :=5;
signal amarillo_tiempo: integer :=1;
signal contador: integer :=0;

begin  
--Divisor de frecuencia
process(clk,rst)
    begin
        if(rst='1')then
            clk_aux<='0';
            divisor<=0;
        elsif rising_edge(clk) then
            if(divisor=4)then
                divisor<=0;
                clk_aux <= not(clk_aux);
            else
                divisor <= divisor + 1;
            end if;
        end if;
end process;
--proceso semaforo
process(clk_aux,rst)
begin
        if (rst = '1')then--VERDE
            rojo <= '0';
            verde <='1';
            amarillo <='0'; 
            contador <= 0;
         elsif rising_edge(clk_aux) then
            if (verde = '1') then
                if (contador < verde_tiempo) then
                    contador <= contador + 1;
                    rojo <= '0';
                    verde <= '1';
                    amarillo <= '0';
                else -- AMARILLO
                    contador <= 0;
                    rojo <= '0';
                    verde <= '0';
                    amarillo <= '1';
                end if;
            elsif (amarillo = '1') then
                if (contador < amarillo_tiempo) then
                    contador <= contador + 1;
                    rojo <= '0';
                    verde <= '0';
                    amarillo <= '1';
                else -- ROJO
                    contador <= 0;
                    rojo <= '1';
                    verde <= '0';
                    amarillo <= '0';
                end if;
            elsif (rojo = '1') then
                if (contador < rojo_tiempo) then
                    contador <= contador + 1;
                    rojo <= '1';
                    verde <= '0';
                    amarillo <= '0';
                else -- VERDE
                    contador <= 0;
                    rojo <= '0';
                    verde <= '1';
                    amarillo <= '0';
                end if;
            end if;
        end if;
    end process;

end Behavioral;
